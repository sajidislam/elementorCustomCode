// Cleaner code. Moved a lot of the common functions to elementor-form-custom-functions.php 
// make sure that the elementor-form-custom-functions.php exists in the same directory 
// as the functions.php of the (child)theme.

add_action('elementor_pro/forms/validation', function($record, $ajax_handler) {

    // Ensure our custom functions are loaded.
    require_once get_stylesheet_directory() . '/elementor-form-custom-functions.php';

    // Extract submitted form fields.
    $raw_fields = $record->get('fields');
    $fields = [];
    foreach ($raw_fields as $id => $field) {
        $fields[$id] = $field['value'];
    }

    // Validate email.
    if (!isset($fields['email']) || empty(trim($fields['email']))) {
        $ajax_handler->add_error('email', 'Email cannot be blank.');
        return;
    }
    if (!validateEmail($fields['email'])) {
        $table_name = 'failedEmails';
	  }
	else {
		$table_name = 'successEmails';
	}
    $additional_data = [
       'IP_Address' => captureIPAddress(),
       'Date' => current_time('mysql'),
       'Referrer' => captureReferrer(),
       'User_Agent' => captureBrowserDetails(),
     ];
    $utm_data = getAllUTMParameters();
    $data_to_insert = array_merge($fields, $additional_data, $utm_data);

        // Insert the data into the database.
    $insert_result = insertEventToDB($table_name, $data_to_insert);
    if (!$insert_result) {
           notifyAdmin("Failed to insert failed email data into database.");
       }
	if ($table_name == 'failedEmails') {
        $ajax_handler->add_error('email', 'Invalid email address.');		
	}
}, 10, 2);
